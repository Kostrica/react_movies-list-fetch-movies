{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/Api.js","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","FindMovie","handleAddFoundMovie","useState","query","setQuery","movieThatFound","setMovieThatFound","showMessage","setShowMessage","useEffect","htmlFor","type","id","placeholder","cn","value","onChange","target","onClick","options","fetch","then","res","result","json","err","Error","Title","Plot","Poster","imdbID","newMovie","App","data","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.012aab9e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovies } from '../../api/Api';\n\ninterface Props {\n  handleAddFoundMovie: any;\n}\n\nconst movie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const FindMovie: React.FC<Props> = ({ handleAddFoundMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movieThatFound, setMovieThatFound] = useState(movie);\n  const [showMessage, setShowMessage] = useState(false);\n\n  const getTitle = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(target.value);\n  };\n\n  const sendAMovieSearchRequest = () => {\n    getMovies(query)\n      .then(({\n        Title,\n        Plot,\n        Poster,\n        imdbID,\n      }) => {\n        const newMovie = {\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        };\n\n        setMovieThatFound(newMovie);\n        setShowMessage(!newMovie.title);\n      });\n  };\n\n  useEffect(() => {\n    setShowMessage(false);\n  }, [query]);\n\n  const addMovieThatFound = () => {\n    handleAddFoundMovie(movieThatFound);\n    setQuery('');\n    setMovieThatFound(movie);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn(\n                'input',\n                { 'is-danger': showMessage },\n              )}\n              value={query}\n              onChange={getTitle}\n            />\n          </div>\n\n          {showMessage && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={sendAMovieSearchRequest}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => (\n                movieThatFound.imdbId && addMovieThatFound()\n              )}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movieThatFound.imdbId\n          ? <MovieCard {...movieThatFound} />\n          : <p>No information to display</p>}\n      </div>\n    </>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=713f09f4&t=';\n\nexport const getMovies = (title, options) => {\n  return fetch(`${BASE_URL}${title}`, options)\n    .then(res => {\n      let result;\n\n      try {\n        result = res.json();\n      } catch (err) {\n        return new Error(err);\n      }\n\n      return result;\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [\n    movies,\n    setMovies,\n  ] = useState(data);\n\n  const addFoundMovie = (movieThatFound: Movie) => {\n    if (!movies.some(({ imdbId }) => imdbId === movieThatFound.imdbId)) {\n      setMovies([...movies, movieThatFound]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie handleAddFoundMovie={addFoundMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}